version: 2.1

orbs:
  node: circleci/node@5.2.0
  docker: circleci/docker@2.5.0

# executors:
#   install_node:
#     docker:
#       - image: cimg/node:21.6.1
#   install_mongo:
#     docker:
#       - image: mongo
#         # environment:
#         #   MONGO_INITDB_ROOT_USERNAME: root
#         #   MONGO_INITDB_ROOT_PASSWORD: example

commands:
  build_node:
    steps:
      - checkout
      - node/install-packages
      - run: echo "Packages are installed successfully!"

  push_to_docker_hub:
    steps:
      - checkout
      - node/install-packages
      - docker/check:
          docker-username: DOCKER_HUB_USERNAME
          docker-password: DOCKER_HUB_PASSWORD
      - docker/install-docker-compose
      - run:
          name: 'Build the Node image!'
          command: docker compose -f docker-compose.prod.yml -p docker-express-prod build
      - run:
          name: 'Push the Node image to DockerHub!'
          command: docker compose -f docker-compose.prod.yml -p docker-express-prod push

jobs:
  test_app:
    docker:
      - image: cimg/node:21.6.1
      - image: mongo
        # environment:
        #   MONGO_INITDB_ROOT_USERNAME: root
        #   MONGO_INITDB_ROOT_PASSWORD: example
        #   MONGO_INITDB_DATABASE: test

    steps:
      - build_node
      - run:
          name: 'Run test!'
          command: npm run test
      - store_test_results:
          path: ~/test/reports/jest

  build_and_push:
    docker:
      - image: cimg/node:21.6.1
      - image: mongo
    steps:
      - build_node
      - push_to_docker_hub

# jobs:
#   test_app:
#     executor: install_node
#     steps:
#       - build_node
#       - run:
#           name: 'Run test!'
#           command: npm run test
#       - store_test_results:
#           path: ~/test/reports/jest

#   connect_mongo:
#     executor: install_mongo
#     steps:
#       - checkout
#       - build_node
#       - run: echo "Installing mongodb"
#       - setup_remote_docker:
#           docker_layer_caching: true
#       - run:
#           name: 'Install Dockerize'
#           command: |
#             apt-get update \
#             && apt-get install -y wget \
#             && wget -O - https://github.com/jwilder/dockerize/releases/download/v0.7.0/dockerize-linux-amd64-v0.7.0.tar.gz | tar xzf - -C /usr/local/bin \
#             && apt-get autoremove -yqq --purge wget && rm -rf /var/lib/apt/lists/*
#       - run:
#           name: 'Wait for Mongo'
#           command: |
#             dockerize -wait http://127.0.0.1:27017 -timeout 1m
#             sleep 10

workflows:
  main:
    jobs:
      # - connect_mongo
      - test_app:
          # requires:
          #   - connect_mongo
          filters:
            branches:
              only: main

      - build_and_push:
          requires:
            - test_app
          filters:
            branches:
              only: main
