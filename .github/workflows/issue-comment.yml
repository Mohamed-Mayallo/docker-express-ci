name: Issue Comment

on:
  issues:
    types: [opened]

jobs:
  just_try_matrix:
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: [ubuntu-latest]
        # runs-on: [ubuntu-latest, windows-latest, macOS-latest]
        node_version: ['16', '20']
    steps:
      - name: Test on node ${{ matrix.node_version }} and ${{ matrix.runs-on }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}

  comment_on_issue_log:
    runs-on: ubuntu-latest
    steps:
      - name: Log Github event
        run: echo '${{ toJSON(github.event) }}' | jq
        shell: bash

  comment_on_issue_by_action:
    runs-on: ubuntu-latest
    steps:
      - name: Create Issue Comment by Actions
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            This is a multi-line test comment
            - With GitHub **Markdown** :sparkles:
            - Created by [create-or-update-comment][1]

            [1]: https://github.com/peter-evans/create-or-update-comment
          reactions: |
            heart
            hooray
            laugh

  comment_on_issue_by_api:
    runs-on: ubuntu-latest
    steps:
      - name: Create Issue Comment by Github API
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${OWNER}/${REPO}/issues/${ISSUE_NUMBER}/comments \
            -f body='Comment using Github API'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.event.organization.login }}
          REPO: ${{ github.event.repository.name }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
